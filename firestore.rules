
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function getUserRole() {
      return getUserData().role;
    }

    function getUserEntityId() {
        return getUserData().entityId;
    }

    function isSuperRole() {
      return getUserRole() in ['Super User', 'Super Admin'];
    }

    function isAdmin() {
        return getUserRole() in ['Super User', 'Super Admin', 'Admin'];
    }

    match /users/{userId} {
      // Allow a user to read profiles of other users in the same entity.
      allow read: if isAuthenticated() && (
        request.auth.uid == userId ||
        isSuperRole() ||
        isAdmin() ||
        resource.data.entityId == getUserEntityId()
      );
      allow create: if isAdmin() || request.auth.uid == userId;
      allow update: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow delete: if isAdmin();
    }

    match /entities/{entityId} {
      allow read;
      allow write: if isSuperRole();
    }

    match /leads/{leadId} {
        allow read: if isAuthenticated() && (isSuperRole() || resource.data.entityId == getUserEntityId());
        allow write: if isAuthenticated() && (isSuperRole() || request.resource.data.entityId == getUserEntityId());
    }

    match /pipelineStages/{stageId} {
      allow read: if isAdmin();
      allow write: if isSuperRole();
    }

    match /automationRules/{ruleId} {
      allow read, write: if isSuperRole();
    }

    match /auditLogs/{logId} {
      allow read: if isAdmin();
      allow create: if isAuthenticated();
    }

    match /settings/{settingId} {
        allow read; // Allow public read access for theme settings
        allow write: if isSuperRole();
    }
  }
}
