
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isSuperUser() {
      return isAuthenticated() && getRole() == 'Super User';
    }
    
    function isSuperAdmin() {
      return isAuthenticated() && getRole() == 'Super Admin';
    }

    function isAdmin() {
      return isAuthenticated() && getRole() == 'Admin';
    }

    function isAtLeastAdmin() {
      return isAuthenticated() && (isAdmin() || isSuperAdmin() || isSuperUser());
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
    
    // USERS
    match /users/{userId} {
      allow read: if isOwner(userId) || isAtLeastAdmin();
      allow create: if isOwner(userId) || isAtLeastAdmin(); // Signup or admin adds user
      allow update: if isOwner(userId) || isAtLeastAdmin(); // Profile updates or admin changes
      allow delete: if isAtLeastAdmin(); // Only admins can delete users
    }
    
    // LEADS
    match /leads/{leadId} {
      // Allow any authenticated user to manage leads. Business logic is on client.
      allow read, write: if isAuthenticated();
    }
    
    // PIPELINE STAGES
    match /pipelineStages/{stageId} {
      allow read, write: if isSuperUser() || isSuperAdmin();
    }
    
    // ENTITIES
    match /entities/{entityId} {
      allow read: if isAuthenticated();
      allow write: if isSuperUser() || isSuperAdmin();
    }
    
    // AUTOMATION RULES
    match /automationRules/{ruleId} {
      allow read, write: if isSuperUser() || isSuperAdmin();
    }
    
    // AUDIT LOGS
    match /auditLogs/{logId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
    }
    
    // SETTINGS (e.g., Theme)
    match /settings/theme {
       allow read: if isAuthenticated();
       allow write: if isSuperUser() || isSuperAdmin();
    }
  }
}
