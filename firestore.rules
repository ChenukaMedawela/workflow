rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for super admin roles
    function isSuperAdmin() {
      return request.auth != null && request.auth.token.role in ['Super User', 'Super Admin'];
    }

    // Helper function to check for admin roles
    function isAdmin() {
      return request.auth != null && request.auth.token.role in ['Admin', 'Super User', 'Super Admin'];
    }
    
    // Helper function to check for any authenticated user
    function isAuthenticated() {
        return request.auth != null;
    }

    // Settings can be read by anyone (for login page logo), but only written by Super Admins.
    match /settings/{docId} {
      allow read;
      allow write: if isSuperAdmin();
    }

    // Users can be read by any authenticated user, but only managed by Admins.
    match /users/{userId} {
      allow get: if isAuthenticated();
      allow list: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Entities can be read by any authenticated user, but only managed by Super Admins.
    match /entities/{entityId} {
        allow read: if isAuthenticated();
        allow write: if isSuperAdmin();
    }

    // Pipeline stages can be read by any authenticated user, but only managed by Super Admins.
    match /pipelineStages/{stageId} {
      allow read: if isAuthenticated();
      allow write: if isSuperAdmin();
    }
    
    // Automation rules can be read by any authenticated user, but only managed by Super Admins.
    match /automationRules/{ruleId} {
        allow read: if isAuthenticated();
        allow write: if isSuperAdmin();
    }

    // Leads can be read, created, and updated by any authenticated user.
    match /leads/{leadId} {
      allow read, create, update: if isAuthenticated();
      allow delete: if isAdmin(); // Only admins can delete leads
    }
    
    // Audit logs are write-only for clients. They cannot be read or updated from the client-side.
    match /auditLogs/{logId} {
      allow read, update, delete: if false;
      allow create: if isAuthenticated();
    }
  }
}
