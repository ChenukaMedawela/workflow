
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isSuperUser() {
      return isSignedIn() && getUserData().role == 'Super User';
    }

    function isSuperAdmin() {
      return isSignedIn() && (getUserData().role == 'Super Admin' || isSuperUser());
    }

    function isAdmin() {
      return isSignedIn() && (getUserData().role == 'Admin' || isSuperAdmin());
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    // Rules for 'users' collection
    match /users/{userId} {
      // Any authenticated user can create their own user document.
      allow create: if isSignedIn() && request.auth.uid == userId;
      
      // Users can read their own data. Admins can read any user's data.
      allow read: if isSignedIn() && (request.auth.uid == userId || isAdmin());
      
      // Users can update their own data. Admins can update any user's data.
      // A Super User cannot have their role changed by a Super Admin.
      allow update: if isSignedIn() && 
                    (request.auth.uid == userId || 
                      (isAdmin() && !(resource.data.role == 'Super User' && isSuperAdmin() && !isSuperUser())));

      // Only Super Admins can delete users, but not themselves or Super Users.
      allow delete: if isSuperAdmin() && request.auth.uid != userId && resource.data.role != 'Super User';
    }

    // Rules for 'entities' collection
    match /entities/{entityId} {
      // Super Admins can create, read, update, and delete entities.
      allow read: if isSignedIn();
      allow write: if isSuperAdmin();
    }

    // Rules for 'pipelineStages' collection
    match /pipelineStages/{stageId} {
      // Any authenticated user can read pipeline stages.
      allow read: if isSignedIn();
      
      // Only Super Admins can create, update, or delete pipeline stages.
      allow write: if isSuperAdmin();
    }

    // Rules for 'leads' collection
    match /leads/{leadId} {
      // Any authenticated user can create a lead.
      allow create: if isSignedIn();

      // Users can access leads assigned to their entity, or leads in the 'Global' stage.
      // Super Admins/Admins can access all leads.
      allow read, update: if isSignedIn() && 
                            (isAdmin() || 
                             resource.data.ownerEntityId == getUserData().entityId || 
                             get(/databases/$(database)/documents/pipelineStages/$(resource.data.stageId)).data.name == 'Global');
      
      // Leads can be deleted by Admins.
      allow delete: if isAdmin();
    }
    
    // Rules for 'automationRules' collection
    match /automationRules/{ruleId} {
        // Any authenticated user can read automation rules.
        allow read: if isSignedIn();
        // Only Super Admins can write automation rules.
        allow write: if isSuperAdmin();
    }
    
    // Rules for 'settings' collection
    match /settings/{settingId} {
        // Any authenticated user can read settings.
        allow read: if isSignedIn();
        // Only Super Admins can write to settings.
        allow write: if isSuperAdmin();
    }
    
    // Rules for 'auditLogs' collection
    match /auditLogs/{logId} {
        allow read: if isSignedIn();
        // Writing to the audit log is handled by server-side logic (logAudit function),
        // so direct client writes should be denied.
        allow write: if false; 
    }
  }
}
