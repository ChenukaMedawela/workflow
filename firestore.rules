rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isSuperUser() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super User';
    }

    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Super User', 'Super Admin'];
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Super User', 'Super Admin', 'Admin'];
    }

    // Rules for 'users' collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if !isSuperAdmin(); // Public signup
      allow update: if isAdmin() || request.auth.uid == userId;
      allow delete: if isAdmin() && request.auth.uid != userId; // Prevent self-deletion via rule
    }

    // Rules for 'entities' collection
    match /entities/{entityId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isSuperAdmin();
    }
    
    // Rules for 'leads' collection
    match /leads/{leadId} {
      allow read, create: if isSignedIn();
      allow update, delete: if isAdmin();
    }

    // Rules for 'pipelineStages' collection
    match /pipelineStages/{stageId} {
        allow read: if isSignedIn();
        allow create, update, delete: if isSuperAdmin();
    }
    
    // Rules for 'automationRules' collection
    match /automationRules/{ruleId} {
        allow read, write: if isSuperAdmin();
    }
    
    // Rules for 'auditLogs' collection
    match /auditLogs/{logId} {
      allow read: if isSignedIn();
      allow create: if true; // Allows server-side logging
    }

    // Rules for 'settings' collection
    match /settings/{settingId} {
        allow read: if true; // Public read for theme settings
        allow write: if isSuperAdmin();
    }
  }
}
